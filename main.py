from config import bot, admins, keyboard, users, save_objectfrom keyboard import *from button import Buttontext_to_add_but = {1: "Введите название кнопки",                   2: "Введите url. Должна начинаться с https",                   3: "Введите текст",                   4: "Отправьте видео",                   5: "Отправьте фото"}@bot.message_handler(commands=["start"], func=lambda message: admins.get_elem(message.from_user.id))def start_admin(message):    global admins    user_id = message.from_user.id    admin = admins.get_elem(user_id)    r = bot.send_message(chat_id=user_id,                         text="Выберите:",                         reply_markup=start_keyboard_for_admin)    admin.flag = 0    admin.message_id = r.id    save_object(admins)@bot.message_handler(commands=["user"], func=lambda message: admins.get_elem(message.from_user.id))def user_admin(message):    global admins    user_id = message.from_user.id    admin = admins.get_elem(user_id)    r = bot.send_message(chat_id=user_id,                         text="Введите user_id")    admin.flag = 7    admin.message_id = r.id    save_object(admins)@bot.message_handler(commands=["start"])def start_admin(message):    global admins    user_id = message.from_user.id    bot.send_message(chat_id=user_id,                     text="Выберите:",                     reply_markup=admins.keyboard)@bot.callback_query_handler(func=lambda call: admins.get_elem(call.from_user.id) and call.data not in keyboard)def call_admin(call):    global admins    user_id = call.from_user.id    admin = admins.get_elem(user_id)    match call.data:        case "watch_keyboard":            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="Вот что есть",                                  reply_markup=admins.keyboard)        case "add_button":            admin.button = Button()            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="Выберите:",                                  reply_markup=keyboard_for_add_1)        case "add_url_button":            admin.button.type = "url_button"            admin.flag = 1            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=text_to_add_but[admin.flag])        case "add_default_button":            admin.flag = 1            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=text_to_add_but[admin.flag])        case "add_video":            admin.flag = 4            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=text_to_add_but[admin.flag])        case "add_photo":            admin.flag = 5            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=text_to_add_but[admin.flag])        case "dell_button":            admin.flag = 6            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="введите название кнопки")    save_object(admins)@bot.message_handler(content_types=["text"], func=lambda message: admins.get_elem(message.from_user.id))def mes_admin(message):    global admins, keyboard    user_id = message.from_user.id    admin = admins.get_elem(user_id)    bot.delete_message(chat_id=user_id,                       message_id=message.id)    match admin.flag:        case 1:            if admin.button.type == "url_button":                admin.flag = 2            else:                admin.flag = 3            admin.button.name = message.text            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=text_to_add_but[admin.flag])        case 2:            admin.flag = 0            admin.button.url = message.text            admins.keyboard.add(                types.InlineKeyboardButton(text=admin.button.name, url=admin.button.url)            )            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="Кнопка добавлена",                                  reply_markup=start_keyboard_for_admin)            admin.button = Button()        case 3:            admin.button.text = message.text            admin.flag = 0            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="Выбери:",                                  reply_markup=keyboard_for_add_2)        case 6:            admin.flag = 0            for i in range(len(admins.keyboard.keyboard)):                if admins.keyboard.keyboard[i][0].text == message.text:                    del admins.keyboard.keyboard[i]                    bot.edit_message_text(chat_id=user_id,                                          message_id=admin.message_id,                                          text="Кнопка добавлена",                                          reply_markup=start_keyboard_for_admin)                    break            else:                bot.edit_message_text(chat_id=user_id,                                      message_id=admin.message_id,                                      text="Кнопка не найдена",                                      reply_markup=start_keyboard_for_admin)        case 7:            admins += int(message.text)            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="Пользователь добавлен",                                  reply_markup=start_keyboard_for_admin)    save_object(admins)@bot.message_handler(content_types=["photo"], func=lambda message: admins.get_elem(message.from_user.id))def photo(message):    global admins    global keyboard    user_id = message.from_user.id    admin = admins.get_elem(user_id)    bot.delete_message(chat_id=user_id,                       message_id=message.id)    if admin.flag == 5:        admin.button.photo = bot.download_file(            bot.get_file(message.photo[len(message.photo) - 1].file_id).file_path        )        admin.flag = 0        admin.button.type = "photo_button"        admins.keyboard.add(            types.InlineKeyboardButton(text=admin.button.name, callback_data=admin.button.name)        )        keyboard.add_but(admin.button)        bot.edit_message_text(chat_id=user_id,                              message_id=admin.message_id,                              text="Кнопка добавлена",                              reply_markup=start_keyboard_for_admin)        admin.button = Button()    save_object(admins)    save_object(data=keyboard, file_name="keyboard.pkl")@bot.message_handler(content_types=["video"], func=lambda message: admins.get_elem(message.from_user.id))def photo(message):    global admins    global keyboard    user_id = message.from_user.id    admin = admins.get_elem(user_id)    bot.delete_message(chat_id=user_id,                       message_id=message.id)    if admin.flag == 4:        admin.button.type = "video_button"        admin.button.video = bot.download_file(            bot.get_file(message.video.file_id).file_path        )        admin.flag = 0        admins.keyboard.add(            types.InlineKeyboardButton(text=admin.button.name, callback_data=admin.button.name)        )        keyboard.add_but(admin.button)        bot.edit_message_text(chat_id=user_id,                              message_id=admin.message_id,                              text="Кнопка добавлена",                              reply_markup=start_keyboard_for_admin)        admin.button = Button()        save_object(data=keyboard, file_name="keyboard.pkl")@bot.callback_query_handler(func=lambda call: keyboard.get_elem(call.data))def user_message(call):    global admins    global keyboard    global users    user_id = call.from_user.id    if user_id not in users:        users += user_id    user = users.get_elem(user_id)    try:        bot.delete_message(chat_id=user_id,                           message_id=user.message_id)    except:        pass    button = keyboard.get_elem(call.data)    if button.type == "photo_button":        r = bot.send_photo(chat_id=user_id,                           photo=button.photo,                           caption=button.text)        user.message_id = r.id    else:        r = bot.send_video(chat_id=user_id,                           data=button.video,                           caption=button.text)        user.message_id = r.id    save_object(admins)    save_object(data=users, file_name="users.pkl")if __name__ == "__main__":    print("START")    bot.infinity_polling()